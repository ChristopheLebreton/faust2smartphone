#!/bin/bash

#####################################################################
#                                                                   #
#    Generates an API for Android or iOS based on a Faust object    #
#               (c) Allen and Grame, 2017             #
#                                                                   #
#####################################################################

. faustpath

# change if you want to get the log of what's happening
LOG="/dev/null"

# exit if a command fails
set -e

# global option variables
ANDROID="0"
IOS="0"
IOSMOTION="0"
NVOICES="12"
POLY2="0"
MIDI="0"
EFFECT=""
SOURCE=1
REUSE=0
INSTALL=0
OPTIONS=""
LIBMOTION=""
CHANGELIB=0

echoHelp ()
{
	echo "===================================="
	echo "faust2smartphone - Musical Mobile App Project Generator"
	echo "It converts Faust to a ready-to-edit app project for Android or iOS."
	echo "===================================="
	echo "Usage: faust2smartphone 'option' xxx.dsp"
	echo "===================================="
	echo "Option: -ios for Xcode simple project(IOS)"
	echo "Option: -iosmotion for Xcode project with motion support(IOS)"
	echo "Option: -updatelib <.lib> for update motion library(IOS)"
	echo "Option: -osc for OSC support(IOS)"
	echo "Option: -android for Android Studio project"
	echo "Option: -reuse for Uptade the project"
	echo "Option: -help for Help"
	echo "===================================="
}

###########################
# Processing Arguments
###########################

while [ $1 ]
do
	p=$1
	
    if [ $p = "-help" ]; then
		echoHelp
    elif [[ -f "$p" ]]; then
		FILE="$p"
    elif [ $p = "-android" ]; then
		ANDROID=1
    elif [ $p = "-ios" ]; then
		IOS="1"
	elif [ $p = "-iosmotion" ]; then
		IOSMOTION="1"
	elif [ $p = "-reuse" ]; then
		REUSE=1
	elif [ $p = "-source" ]; then
		SOURCE=1
	elif [ $p = "-debug" ]; then
		LOG="/dev/stdout"
	elif [ $p = "-install" ]; then
		INSTALL=1
    elif [ "$p" = "-effect" ]; then
        POLY2="1"
		shift
		if [[ -f "$1" ]]; then
			EFFECT=$1
		else
			echo "No file specified after -effect"
			echoHelp
			exit
		fi
	elif [ "$p" = "-updatelib" ]; then
        CHANGELIB="1"
		shift
		if [[ -f "$1" ]]; then
			LIBMOTION=$1
		else
			echo "No lib specified after -updatelib"
			echoHelp
			exit
		fi
    elif [ $p = "-nvoices" ]; then
		shift
		NVOICES=$1
    elif [ ${p:0:1} = "-" ]; then
        OPTIONS="$OPTIONS $p"
    else
		echo "$p wrong argument"
		echoHelp
		exit
    fi
	shift
done

if [ -z $FILE ]; then
    echo "Please, provide a Faust file to process"
    echoHelp
    exit
fi

###################################
# Configuring
###################################
CURRENTFOLDER=$(dirname "$p")
APPNAME=$(basename "$FILE")
APPNAME="${APPNAME%.dsp}"
BUILDDIR="faustSmartphone.$APPNAME"

# making sure that platform is set and generate corresponding global vars
if [ $ANDROID -eq 1 ]; then
	APPFOLDER="$BUILDDIR/app/src/main"
elif [ $IOS -eq 1 ]; then
	APPFOLDER="$BUILDDIR/iOS"
elif [ $IOSMOTION -eq 1 ]; then
	APPFOLDER="$BUILDDIR/iOS"
else
	echo "Please, specify a platform: -android or -ios or -iosmotion"
	echoHelp
	exit 1
fi

###############################
# Creating Default Project
###############################

if [ $REUSE -eq 0 ] || [ ! -d "$BUILDDIR" ]; then
	if [ -d "$BUILDDIR" ]; then # if BUILDIR exists, then delete it
		echo "Delete existing app project $BUILDDIR" > $LOG
		rm -rf "$BUILDDIR"
	fi

	# copying new template app if no reuse
	if [ ! -d "$BUILDDIR" ]; then
		mkdir -p "$BUILDDIR"
		if [ $ANDROID -eq 1 ]; then
			echo "Creating a new Android project in $BUILDDIR" > $LOG
			cp -r $FAUSTLIB/smartphone/android/* "$BUILDDIR"
			cp -r $FAUSTLIB/smartphone/compile "$CURRENTFOLDER"
			
			# change 'faust' with real *APPNAME
			PLATFORM=$(uname)
			
			if [ $PLATFORM = "Darwin" ]; then
				sed -i '' 's,com.allensmartfaust.faustapi,com.allensmartfaust.'$APPNAME',g' $BUILDDIR/app/build.gradle
				sed -i '' 's,com.allensmartfaust.faustapi,com.allensmartfaust.'$APPNAME',g' $APPFOLDER/java/com/allensmartfaust/faustapi/*
				sed -i '' 's,com.allensmartfaust.faustapi,com.allensmartfaust.'$APPNAME',g' $APPFOLDER/AndroidManifest.xml
				sed -i '' 's,com.allensmartfaust.faustapi,com.allensmartfaust.'$APPNAME',g' $APPFOLDER/res/layout/activity_main.xml
				sed -i '' 's,FaustAPI,'$APPNAME',g' $APPFOLDER/res/values/strings.xml
			else
				sed -i 's,com.allensmartfaust.faustapi,com.allensmartfaust.'$APPNAME',g' $BUILDDIR/app/build.gradle
				sed -i 's,com.allensmartfaust.faustapi,com.allensmartfaust.'$APPNAME',g' $APPFOLDER/java/com/allensmartfaust/faustapi/*
				sed -i 's,com.allensmartfaust.faustapi,com.allensmartfaust.'$APPNAME',g' $APPFOLDER/AndroidManifest.xml
				sed -i 's,com.allensmartfaust.faustapi,com.allensmartfaust.'$APPNAME',g' $APPFOLDER/res/layout/activity_main.xml
				sed -i 's,FaustAPI,'$APPNAME',g' $APPFOLDER/res/values/strings.xml
			fi
			mv $APPFOLDER/java/com/allensmartfaust/faustapi $APPFOLDER/java/com/allensmartfaust/$APPNAME
		elif [ $IOS -eq 1 ]; then
			echo "Creating a new iOS project in $BUILDDIR" > $LOG
			cp -r $FAUSTLIB/smartphone/iOS/* "$BUILDDIR"
			cp -r $FAUSTLIB/smartphone/compile "$CURRENTFOLDER"
			
			sed -i '' 's,$(TARGET_NAME),'$APPNAME',g' $BUILDDIR/iOS.xcodeproj/project.pbxproj
			sed -i '' 's,com.AllenSmartFaust,com.AllenSmartFaust.'$APPNAME',g' $BUILDDIR/IOS.xcodeproj/project.pbxproj
		elif [ $IOSMOTION -eq 1 ]; then
			echo "Creating a new iOS project with motion support in $BUILDDIR" > $LOG
			cp -r $FAUSTLIB/smartphone/iOS-motion/* "$BUILDDIR"
			if [ $REUSE -eq 0 ]; then
			cp -r $FAUSTLIB/smartphone/compile "$CURRENTFOLDER"
			cp -r $FAUSTLIB/smartphone/updateCue "$CURRENTFOLDER"
			cp -r $FAUSTLIB/smartphone/cueNums.txt "$CURRENTFOLDER"
			cp -r $FAUSTLIB/smartphone/cueTips.txt "$CURRENTFOLDER"
			fi
			sed -i '' 's,$(TARGET_NAME),'$APPNAME',g' $BUILDDIR/iOS.xcodeproj/project.pbxproj
			sed -i '' 's,com.AllenSmartFaust,com.AllenSmartFaust.'$APPNAME',g' $BUILDDIR/IOS.xcodeproj/project.pbxproj
		fi
	fi
fi

###########################
# Adding DSP
###########################

if [ $ANDROID -eq 1 ]; then
	if [ -z "$EFFECT" ]; then # no effect
		echo "Adding DSP with no effect chain to the app" > $LOG
		faust2api_a -android -nodoc "$FILE" > $LOG
	else
		echo "Adding DSP with effect chain to the app" > $LOG
		faust2api_a -android -nvoices "$NVOICES" -effect "$EFFECT" -nodoc "$FILE" > $LOG
	fi
	unzip "dsp-faust.zip" > $LOG
	mv "dsp-faust" "$BUILDDIR"
	rm "dsp-faust.zip"
	cp -r "$BUILDDIR/dsp-faust/cpp" "$APPFOLDER"
	cp $BUILDDIR/dsp-faust/java/* "$APPFOLDER/java/com/DspFaust"
	rm -r "$BUILDDIR/dsp-faust"
elif [ $IOS -eq 1 ]; then
	if [ -z "$EFFECT" ]; then # no effect
		echo "Adding DSP with no effect chain to the app" > $LOG
		if [ -z $OPTIONS ]; then
		faust2api_a -ios -nodoc "$FILE" > $LOG
		else 
		faust2api_a -ios -nodoc "$OPTIONS" "$FILE" > $LOG
		fi
	else
		echo "Adding DSP with effect chain to the app" > $LOG
		faust2api_a -ios -midi -nvoices "$NVOICES" -effect "$EFFECT" -nodoc "$FILE" > $LOG
	fi
	unzip "dsp-faust.zip" > $LOG
	mv "dsp-faust" "$BUILDDIR"
	rm "dsp-faust.zip"
	cp $BUILDDIR/dsp-faust/* "$APPFOLDER"
	rm -r "$BUILDDIR/dsp-faust"
elif [ $IOSMOTION -eq 1 ]; then
	echo "Adding DSP with motion support to the app" > $LOG
	if [ -z $OPTIONS ]; then
		faust2api_a -iosmotion -nodoc "$FILE" > $LOG
		else 
		faust2api_a -iosmotion -nodoc "$OPTIONS" "$FILE" > $LOG
	fi
	unzip "dsp-faust.zip" > $LOG
	mv "dsp-faust" "$BUILDDIR"
	rm "dsp-faust.zip"
	cp $BUILDDIR/dsp-faust/* "$APPFOLDER"
	rm -r "$BUILDDIR/dsp-faust"
	if [ $CHANGELIB -eq 1 ]; then
	echo "Updating motion lib for the app" > $LOG
	faust -i -a $FAUSTLIB/smartphone/DspFaustMotion.cpp "$LIBMOTION" -o "$APPFOLDER/DspFaustMotion.cpp" > $LOG
	fi
fi


###########################
# Cleaning
###########################

if [ $REUSE -eq 0 ] && [ $SOURCE -eq 0 ]; then
	echo "Delete app project $BUILDDIR" > $LOG
	rm -rf $BUILDDIR
else
	echo "========================================================"
	echo "An app project $BUILDDIR was created or updated"
	echo "A compile file was created. [Compile APP after edit the project]"
	echo "========================================================"
fi
